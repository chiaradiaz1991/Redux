{"ast":null,"code":"export const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_COUNTER\":\n      return Object.assign({}, state, {\n        counter: state.counter + 1\n      });\n\n    case \"RESET\":\n      return Object.assign({}, state, {\n        counterReset: state.counter = 0\n      });\n\n    case \"ADD_TASK\":\n      return Object.assign({}, state, {\n        tasks: [...state.tasks, {\n          value: action.value,\n          isComplete: false\n        }]\n      });\n\n    case \"COMPLETE_TASK\":\n      const updatedTasks = state.tasks.map((item, key) => {\n        if (key == action.value) {\n          item.isComplete = true;\n        }\n\n        return item;\n      });\n      return Object.assign({}, state, {\n        tasks: updatedTasks\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/chia/Desktop/Course it/Redux/combineReducersApp/src/reducers/tasks.js"],"names":["reducer","state","initialState","action","type","Object","assign","counter","counterReset","tasks","value","isComplete","updatedTasks","map","item","key"],"mappings":"AAGA,OAAO,MAAMA,OAAO,GAAG,CAACC,KAAK,GAAGC,YAAT,EAAuBC,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5BM,QAAAA,OAAO,EAAEN,KAAK,CAACM,OAAN,GAAgB;AADG,OAAzB,CAAP;;AAGJ,SAAK,OAAL;AACI,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5BO,QAAAA,YAAY,EAAEP,KAAK,CAACM,OAAN,GAAgB;AADF,OAAzB,CAAP;;AAGJ,SAAK,UAAL;AACI,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5BQ,QAAAA,KAAK,EAAE,CAAC,GAAGR,KAAK,CAACQ,KAAV,EAAiB;AAACC,UAAAA,KAAK,EAAEP,MAAM,CAACO,KAAf;AAAsBC,UAAAA,UAAU,EAAE;AAAlC,SAAjB;AADqB,OAAzB,CAAP;;AAGJ,SAAK,eAAL;AACI,YAAMC,YAAY,GAAGX,KAAK,CAACQ,KAAN,CAAYI,GAAZ,CAAgB,CAACC,IAAD,EAAOC,GAAP,KAAa;AAC9C,YAAIA,GAAG,IAAIZ,MAAM,CAACO,KAAlB,EAAyB;AACrBI,UAAAA,IAAI,CAACH,UAAL,GAAiB,IAAjB;AACH;;AACD,eAAOG,IAAP;AACH,OALoB,CAArB;AAMA,aAAOT,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5BQ,QAAAA,KAAK,EAAEG;AADqB,OAAzB,CAAP;;AAGJ;AACI,aAAOX,KAAP;AAxBR;AA0BH,CA3BM","sourcesContent":["\n\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"ADD_COUNTER\":\n            return Object.assign({}, state, {\n                counter: state.counter + 1\n            })\n        case \"RESET\":\n            return Object.assign({}, state, {\n                counterReset: state.counter = 0\n            })\n        case \"ADD_TASK\":\n            return Object.assign({}, state, {\n                tasks: [...state.tasks, {value: action.value, isComplete: false}]\n            })\n        case \"COMPLETE_TASK\":\n            const updatedTasks = state.tasks.map((item, key)=>{\n                if (key == action.value) {\n                    item.isComplete= true\n                }\n                return item\n            })\n            return Object.assign({}, state, {\n                tasks: updatedTasks\n            })\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}