{"ast":null,"code":"var _jsxFileName = \"/Users/chia/Desktop/Course it/Redux/combineReducersApp/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Button from './components/Button/index';\nimport AddTask from './components/AddTask/index';\nimport Tasks from './components/Tasks/index';\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, this.props.counter !== 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Counter: \", this.props.counter, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Counter: \", this.props.counterReset, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(AddTask, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Tasks, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  return {\n    counter: state.counter,\n    counterReset: state.counterReset,\n    test: state.name //puede tener otro nombre la clave si la propiedad es la que corresponde. se puede llamar test en vez de name mientras que llame a name \n\n  };\n}\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/chia/Desktop/Course it/Redux/combineReducersApp/src/App.js"],"names":["React","connect","Button","AddTask","Tasks","App","Component","render","props","counter","counterReset","mapStateToProps","state","console","log","test","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;AAGA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAGhCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,OAAX,KAAuB,CAAvB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,KAAKD,KAAL,CAAWC,OADvB,OACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhC,CADD,GAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,KAAKD,KAAL,CAAWE,YADvB,EACoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpC,CALN,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAaE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF;AAiBD;;AArB+B;;AAwBlC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACLH,IAAAA,OAAO,EAAEG,KAAK,CAACH,OADV;AAELC,IAAAA,YAAY,EAAEE,KAAK,CAACF,YAFf;AAGLK,IAAAA,IAAI,EAAEH,KAAK,CAACI,IAHP,CAGY;;AAHZ,GAAP;AAKD;;AAED,eAAef,OAAO,CAACU,eAAD,CAAP,CAAyBN,GAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Button from './components/Button/index';\nimport AddTask from './components/AddTask/index';\nimport Tasks from './components/Tasks/index';\n\n\nclass App extends React.Component {\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.props.counter !== 0 ? (\n          <div>\n            Counter: {this.props.counter} <br />\n          </div>) : (\n            <div>\n              Counter: {this.props.counterReset}<br />\n            </div>)\n        }\n        <br />\n        <Button />\n        <br />\n        <AddTask />\n        <Tasks />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log(state)\n  return {\n    counter: state.counter,\n    counterReset: state.counterReset,\n    test: state.name //puede tener otro nombre la clave si la propiedad es la que corresponde. se puede llamar test en vez de name mientras que llame a name \n  }\n}\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}